#!/bin/bash
set -eo pipefail

usage() {
    echo 1>&2 "Usage: $(basename ${0}) <remote> <pr>"
}

if [ "${#}" -ne 2 ]; then
  usage
  exit 1
fi

readonly BRANCH=$(git rev-parse --abbrev-ref HEAD)
readonly REMOTE=${1}
readonly PR=${2}

if [ -z "${REMOTE}" ]; then
  echo "No REMOTE provided."
  usage
  exit

if [ -z "${PR}" ]; then
  echo "No PR provided."
  usage
  exit 2
fi

echo "Merging ${PR} from ${REMOTE} onto ${BRANCH}"
#FETCH_URL=`git remote show $REMOTE|grep "Fetch URL"|cut -c14-`
readonly FETCH_URL=$(git remote -v | grep "${REMOTE}" | grep 'fetch' | cut -f2 | cut -d" " -f1)
readonly OWNER=$(echo "${FETCH_URL}" | cut -d: -f2 | cut -d/ -f4)
readonly REPO=$(echo "${FETCH_URL}" | cut -d/ -f5)
readonly PULL=$(curl -s -n "https://api.github.com/repos/${OWNER}/${REPO}/pulls/${PR}")
#PULL=`cat /tmp/out`
readonly MSG="Merge pull request #${PR} from $(echo ${PULL} | jq -r .head.label)
$(echo "${PULL}" | jq -r .title)"
echo "${MSG}"

if [ "${#}" != 2 ]; then
    echo 1>&2 "Usage: $(basename ${0}) <remote> <pr>"
    exit 1
fi
#BRANCH=$1
readonly BRANCH=$(git rev-parse --abbrev-ref HEAD)
readonly REMOTE=${1}
readonly PR=${2}

if [ -z "${PR}" ]; then
  echo "No PR provided."
  exit 2

echo "Merging ${PR} from ${REMOTE} onto ${BRANCH}"
#FETCH_URL=`git remote show $REMOTE|grep "Fetch URL"|cut -c14-`
readonly FETCH_URL=$(git remote -v | grep "${REMOTE}" | grep 'fetch' | cut -f2 | cut -d" " -f1)
readonly OWNER=$(echo "${FETCH_URL}" | cut -d: -f2 | cut -d/ -f4)
readonly REPO=$(echo "${FETCH_URL}" | cut -d/ -f5)
readonly PULL=$(curl -s -n "https://api.github.com/repos/${OWNER}/${REPO}/pulls/${PR}")
#PULL=`cat /tmp/out`
readonly MSG="Merge pull request #${PR} from $(echo ${PULL} | jq -r .head.label)
$(echo "${PULL}" | jq -r .title)"
echo "${MSG}"
echo -n "Continue..." && read _
set -x
git fetch "${REMOTE}" "pull/${PR}/head"
git merge --no-ff -m "${MSG}" FETCH_HEAD
